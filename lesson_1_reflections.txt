How did viewing a diff between two versions of a file help you see the bug that was introduced?
(1) Can locate bug easily
(2) Only compare the parts that are different
(3) Less parts to compare

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
(1) Mistakes can be located
(2) Previous versions can be restored
(3) Can find reasons for why certain code changed

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
(Pros) You can decide the size of change
(Pros) Easier to refer to since there's meaningful change
(Pros) You don't get too many versions
(Cons) You may forget to save

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others like Google Docs, treat each file separately?
Git deals more with programming codes which uses many files inter-related

How can you use the commands git log and git diff to view the history of files?
Git log to scroll through the version changes
Git diff to compare the differences

How might using version control make you more confident to make changes that could break something?
Having a history what what was working so that restore the code without bug is possible

Now that you have your workspace set up, what do you want to try using Git for?
Create a new project with version control!